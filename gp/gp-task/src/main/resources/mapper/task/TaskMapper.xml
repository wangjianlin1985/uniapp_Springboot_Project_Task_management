<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.task.dao.TaskDao" >

	<sql id="selectAllVO">
		select
			a.id,
			a.name,
			a.remark,
			a.label_id as "label.id",
			b.name as "label.name",
			a.yxj,
			a.status,
			a.end_time as "endTime",
			a.step_id as "step.id",
			c.name as "step.name",
			a.project_id as "project.id",
			d.name as "project.name",
			a.user_id as "user.userId",
			e.user_name as "user.userName",
			a.finish_time as "finishTime"
		from task a 
			left join task_label b on a.label_id = b.id
			left join task_temp_step c on a.step_id = c.id
			left join task_project d on a.project_id = d.id
			left join sys_user e on a.user_id = e.user_id
	</sql>
	
	
	<select id="list" parameterType="Task" resultType="Task" >
		<include refid="selectAllVO" />
		where d.name is not null
		<if test="name != null and name != ''">
			and a.name like concat('%',#{name},'%')
		</if>
		<if test="yxj != null and yxj != ''">
			and a.yxj = #{yxj}
		</if>
		<if test="status != null">
			and a.status = #{status}
		</if>
		<if test="project != null and project.id != null">
			and a.project_id = #{project.id}
		</if>
		<if test="user != null and user.userId != null">
			and a.user_id = #{user.userId}
		</if>
		<if test="user != null and user.userName != null and user.userName != ''">
			and e.user_name like concat('%',#{user.userName},'%')
		</if>
	</select>
	
	
	<select id="getById" parameterType="Long" resultType="Task" >
		<include refid="selectAllVO" />
		where a.id = #{id}
	</select>
	
	<insert id="add" useGeneratedKeys="true" keyProperty="id" >
		insert into task(name,remark,label_id,yxj,end_time,step_id,project_id,user_id)
		values(#{name},#{remark},#{label.id},#{yxj},#{endTime},#{step.id},#{project.id},#{user.userId})
	</insert>
	
	<update id="updateStatus">
		update task set status = #{status},finish_time = #{finishTime} where id = #{id}
	</update>
	
	<update id="update">
		update 
			task
		set 
			name = #{name},
			remark = #{remark},
			label_id = #{label.id},
			yxj = #{yxj},
			end_time = #{endTime},
			step_id = #{step.id}
		where id = #{id}	
	</update>
	
	<delete id="deleteByIds">
		delete from task
		where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
	</delete>

</mapper>